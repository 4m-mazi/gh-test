name: Auto PR

on:
  create

permissions:
  contents: write
  pull-requests: write
  repository-projects: write

jobs:
  debug:
    name: Debug
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -xe {0}
    steps:
      - run: echo ${{ github.event.commits[0].url }} >> $GITHUB_STEP_SUMMARY
      - run: |
          echo "GITHUB_EVENT_PATH
          \`\`\`json
          `cat $GITHUB_EVENT_PATH`
          \`\`\`" >> $GITHUB_STEP_SUMMARY
      - run: |
          echo "gh
          \`\`\`console
          `gh --version`
          \`\`\`" >> $GITHUB_STEP_SUMMARY
      - run: |
          echo "docker
          \`\`\`console
          `docker --version`
          \`\`\`" >> $GITHUB_STEP_SUMMARY
      - run: |
          echo "docker-compose
          \`\`\`console
          `docker-compose --version`
          \`\`\`" >> $GITHUB_STEP_SUMMARY
      - run: |
          echo 'github context
          ```json
          ${{ toJSON(github) }}
          ```' >> $GITHUB_STEP_SUMMARY
  pr:
    if: github.event.ref_type == 'branch' && ! github.event.repository.fork && ! startsWith(github.event.ref, 'release/')
    name: Create
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -xe {0}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PROJECT: "てすと"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup git
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git config push.default current
      - name: Create a pull request
        run: |
          ISSUE=`echo "${{ github.event.ref }}" | grep -oE '#[0-9]+'`
          if ${{ startsWith(github.event.ref, 'hotfix/') }}; then
            if git diff --quiet origin/main; then
              git commit --allow-empty -m "empty commit"
              git push
            fi
            gh pr create --draft --base main --assignee ${{ github.event.sender.login }} --title "${{ github.event.ref }}" --body "close $ISSUE" --project $PROJECT
          else
            if git diff --quiet origin/develop; then
              git commit --allow-empty -m "empty commit"
              git push
            fi
            gh pr create --draft --base develop --assignee ${{ github.event.sender.login }} --title "${{ github.event.ref }}" --body "close $ISSUE" --project $PROJECT
          fi
